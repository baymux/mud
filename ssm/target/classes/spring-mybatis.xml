<?xml version="1.0" encoding="UTF-8"?>  
    <beans xmlns="http://www.springframework.org/schema/beans"  
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:tx="http://www.springframework.org/schema/tx"  
           xmlns:aop="http://www.springframework.org/schema/aop"
           xmlns:context="http://www.springframework.org/schema/context"  
           xsi:schemaLocation="http://www.springframework.org/schema/beans    
                               http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                               http://www.springframework.org/schema/tx 
							   http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
							   http://www.springframework.org/schema/aop 
							   http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
							   http://www.springframework.org/schema/context    
                               http://www.springframework.org/schema/context/spring-context-4.0.xsd ">  
         
         <context:component-scan base-package="cn." />                    
         <!-- 引入配置文件 -->  
        <bean id="propertyConfigurer"  
            class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
            <property name="location" value="classpath:jdbc.properties" />  
        </bean>  

        <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
            destroy-method="close">  
            <property name="driverClassName" value="${jdbc.driver}" />  
            <property name="url" value="${jdbc.url}" />  
            <property name="username" value="${jdbc.username}" />  
            <property name="password" value="${jdbc.password}" />  
            <!-- 初始化连接大小 -->  
            <property name="initialSize" value="${jdbc.initialSize}"></property>  
            <!-- 连接池最大数量 -->  
            <property name="maxActive" value="${jdbc.maxActive}"></property>  
            <!-- 连接池最大空闲 -->  
            <property name="maxIdle" value="${jdbc.maxIdle}"></property>  
            <!-- 连接池最小空闲 -->  
            <property name="minIdle" value="${jdbc.minIdle}"></property>  
            <!-- 获取连接最大等待时间 -->  
            <property name="maxWait" value="${jdbc.maxWait}"></property>  
        </bean>  

        <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
            <property name="dataSource" ref="dataSource" />  
            <!-- 自动扫描mapping.xml文件 -->  
            <property name="mapperLocations" value="classpath:cn/com/app/mapper/*.xml"></property>  
        </bean>  

        <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
            <property name="basePackage" value="cn.com.app.dao" />  
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
        </bean>  

        <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
        <bean id="transactionManager"  
            class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
            <property name="dataSource" ref="dataSource" />  
        </bean>
        
        <tx:advice id="txAdvice"> 
	        <tx:attributes>
	            <!-- 配置具体的方法的事务属性
	                name：事务添加在哪个方法上，需要自己定义
	                Isolation：事务的隔离级别，默认是按数据库的隔离级别来
	                Propagation：事务的传播行为，默认是同一个事务
	                timeout="-1": 事务的超时时间，默认值使用数据库的超时时间。
	                read-only="false": 事务是否只读，默认可读写。
	                rollback-for: 遇到哪些异常就回滚，其他的都不回滚
	                no-rollback-for：遇到哪些异常不回滚，其他的都回滚。和上面互斥的
	             -->
	            <tx:method name="insert*"/>
	            <tx:method name="updateBy*"/>
	            <tx:method name="deleteBy*"/>
	        </tx:attributes>
    	</tx:advice>

	    <aop:config>
	        <!-- 切入点  @任何一个在名字匹配通配符表达式*Service的 Spring bean 之上的连接点 -->
	        <aop:pointcut expression="execution(* cn.com.app.service.impl.*.*(..))" id="txPointcut"/>
	        <!-- 切面 -->
	        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
	    </aop:config> 


        </beans>